apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'maven-publish'
apply plugin: 'com.palantir.jacoco-coverage'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'com.jfrog.bintray'

apply from: rootProject.file('gradle/versions.gradle')
apply from: rootProject.file('gradle/circle.gradle')

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = rootProject.version
group = rootProject.group

repositories {
    mavenCentral()
    jcenter()
}

checkstyle {
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
}

eclipseJdt {
    inputFile = rootProject.file('config/eclipse/org.eclipse.jdt.core.prefs')
    doLast {
        copy {
            from rootProject.file('/config/eclipse/org.eclipse.jdt.ui.prefs')
            into "${projectDir}/.settings"
        }
    }
}

tasks.withType(Test).all { test ->
    test.testLogging {
        showExceptions true
        exceptionFormat 'full'

        info {
            showStackTraces true
        }
    }
}

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:6.6'

    testImplementation group: 'junit', name: 'junit', version: libVersions.junit
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: libVersions.hamcrest
}

apply from: rootProject.file('gradle/javadoc.gradle'), to: javadoc

license {
    header rootProject.file('config/HEADER')
    skipExistingHeaders true

    ext.year = Calendar.getInstance().get(Calendar.YEAR)

    include '**/*.java'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

publishing {
    publications {
        java(MavenPublication) {
            from components.java

            artifact(sourceJar) {
                classifier 'sources'
            }
        }
    }

    repositories {
        maven {
            name "local"
            url localPublishDir
        }
    }
}

bintray {
  user = System.env.BINTRAY_USERNAME
  key = System.env.BINTRAY_PASSWORD
  publish = true
  pkg {
    repo = 'releases'
    name = 'giraffe'
    userOrg = 'palantir'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/palantir/giraffe.git'
    publications = ['java']
  }
}

publish.dependsOn bintrayUpload
bintrayUpload.onlyIf {
    versionDetails().isCleanTag && System.env.BINTRAY_USERNAME && System.env.BINTRAY_PASSWORD
}

task resolveDependencies {
    description = 'Forces the resolution of all dependencies in all configurations.'
    group = 'build'

    doLast {
        configurations.all { c ->
            if (c.canBeResolved) {
                c.resolve()
            }
        }
    }
}
