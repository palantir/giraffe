ext {
    sphinxEnvDir = "${buildDir}/sphinx-env"
    sphinxBinary = "${sphinxEnvDir}/bin/sphinx-build"
    sphinxBuildDir = "${buildDir}/htmldoc"
}

configurations {
    virtualenv
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    virtualenv 'virtualenv:virtualenv:16.3.0@tar.gz'
}

task installVirtualenv(type: Copy) {
    ext.virtualenvDir = new File(buildDir, 'virtualenv')

    from tarTree({ configurations.virtualenv.singleFile }), {
        eachFile {
            def path = it.relativePath.segments[1..-1].join('/')
            it.relativePath = RelativePath.parse(it.relativePath.isFile(), path)
        }
    }
    into virtualenvDir
}

task sphinxEnv(type: Exec, dependsOn: installVirtualenv) {
    outputs.dir sphinxEnvDir
    commandLine 'python2', "${installVirtualenv.virtualenvDir}/virtualenv.py", sphinxEnvDir
}

task cleanSphinxEnv {
    doLast {
        // use Ant because Gradle Delete task follows symlinks
        ant.delete(includeemptydirs: 'true', removeNotFollowedSymlinks: 'true') {
            fileset(dir: sphinxEnvDir, followsymlinks: 'false', erroronmissingdir: 'false', defaultexcludes: 'false')
        }
    }
}
clean.dependsOn cleanSphinxEnv

task installPackages(type: Exec, dependsOn: sphinxEnv) {
    inputs.files 'requirements.txt'

    // TODO(bkeyes): use site-packages dir instead
    outputs.file sphinxBinary

    commandLine "${sphinxEnvDir}/bin/pip", 'install', '-r', 'requirements.txt'
}

task sphinxdoc(type: Exec, dependsOn: [installPackages, javadoc]) {
    ext.docsVersion = System.env.GIRAFFE_VERSION ?: (project.version as String)

    inputs.dir 'src'
    inputs.property 'docsVersion', docsVersion
    outputs.dir sphinxBuildDir

    environment 'GIRAFFE_VERSION', docsVersion
    commandLine sphinxBinary, '-b', 'html', 'src', sphinxBuildDir
}

task copyJavadoc(type: Copy) {
    from javadoc
    into new File(sphinxBuildDir, 'api')
}
// overwrites some files generated by sphinx
copyJavadoc.mustRunAfter(sphinxdoc)

task htmldoc(dependsOn: [sphinxdoc, copyJavadoc]) {
    group = 'documentation'
    description = 'Generates Sphinx HTML documentation for the project.'
}
